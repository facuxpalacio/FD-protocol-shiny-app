FD::is.euclid(gow.matrix)
?is.euclid
ade4::is.euclid(gow.matrix)
ade4::is.euclid(vegdist(traits, method="gower"))
gow.matrix <- vegdist(traits, method="gower")
ade4::is.euclid(gow.matrix) # si es F, entonces da eigenvalores negativos
PCoA <- wcmdscale(gow.matrix, correction="lingoes")
PCoA <- wcmdscale(gow.matrix, add="lingoes")
pcoa <- wcmdscale(gow.matrix, add="lingoes")
pcoa <- cmdscale(gow.matrix, k = 2, eig = TRUE)
pcoa <- wcmdscale(gow.matrix, add="lingoes")
pcoa.axes <- as.data.frame(pcoa$points)
efit <- envfit(pcoa, bird_traits[,-1])
?wcmdscale
pcoa
pcoa <- wcmdscale(gow.matrix, add="lingoes", eig=TRUE)
pcoa
bird_traits <- read.table("C:/RD/bird_traits.txt",head=T)
bird_traits$body.mass <- as.numeric(bird_traits$body.mass)
comm <- as.matrix(read.csv2("C:/RD/bird_counts.csv"))
# PCOA
traits <- scale(bird_traits[,-1])
rownames(traits) <- make.names(bird_traits[, 1], unique = TRUE)
gow.matrix <- vegdist(traits, method="gower")
pcoa <- wcmdscale(gow.matrix, add="lingoes", eig=TRUE)
pcoa.axes <- as.data.frame(pcoa$points)
efit <- envfit(pcoa, bird_traits[,-1])
vec.sp.df <- as.data.frame(efit$vectors$arrows*sqrt(efit$vectors$r))
trait.names <- colnames(bird_traits[,-1])
hull <- chull(pcoa.axes[, 1:2])
100*cumsum(pcoa$eig)/sum(pcoa$eig)
ggplot() +
xlab("Principal Component 1") + ylab("Principal Component 2") +
geom_hline(yintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_point(data = pcoa.axes, aes(x = V1, y = V2), size = 4,
col = "olivedrab3") +
geom_segment(data = vec.sp.df, aes(x = 0, xend = Dim1 + 0.01,
y = 0, yend = Dim2 + 0.01),
arrow = arrow(length = unit(0.2, "cm")),
colour = "cornflowerblue") +
geom_polygon(data = pcoa.axes[hull, ], aes(x = V1, y = V2), alpha = 0.5) +
geom_text(data = vec.sp.df, aes(x = Dim1, y = Dim2, label = trait.names),
size = 4, check_overlap = TRUE) + theme_bw() +
xlim(min(vec.sp.df$Dim1) - 0.1, max(vec.sp.df$Dim1 + 0.1)) +
ylim(min(vec.sp.df$Dim2) - 0.1, max(vec.sp.df$Dim2 + 0.1))
library(ggplot2)
ggplot() +
xlab("Principal Component 1") + ylab("Principal Component 2") +
geom_hline(yintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_point(data = pcoa.axes, aes(x = V1, y = V2), size = 4,
col = "olivedrab3") +
geom_segment(data = vec.sp.df, aes(x = 0, xend = Dim1 + 0.01,
y = 0, yend = Dim2 + 0.01),
arrow = arrow(length = unit(0.2, "cm")),
colour = "cornflowerblue") +
geom_polygon(data = pcoa.axes[hull, ], aes(x = V1, y = V2), alpha = 0.5) +
geom_text(data = vec.sp.df, aes(x = Dim1, y = Dim2, label = trait.names),
size = 4, check_overlap = TRUE) + theme_bw() +
xlim(min(vec.sp.df$Dim1) - 0.1, max(vec.sp.df$Dim1 + 0.1)) +
ylim(min(vec.sp.df$Dim2) - 0.1, max(vec.sp.df$Dim2 + 0.1))
head(pcoa.axes)
ggplot() +
xlab("Principal Component 1") + ylab("Principal Component 2") +
geom_hline(yintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_point(data = pcoa.axes, aes(x = Dim1, y = Dim2), size = 4,
col = "olivedrab3") +
geom_segment(data = vec.sp.df, aes(x = 0, xend = Dim1 + 0.01,
y = 0, yend = Dim2 + 0.01),
arrow = arrow(length = unit(0.2, "cm")),
colour = "cornflowerblue") +
geom_polygon(data = pcoa.axes[hull, ], aes(x = V1, y = V2), alpha = 0.5) +
geom_text(data = vec.sp.df, aes(x = Dim1, y = Dim2, label = trait.names),
size = 4, check_overlap = TRUE) + theme_bw() +
xlim(min(vec.sp.df$Dim1) - 0.1, max(vec.sp.df$Dim1 + 0.1)) +
ylim(min(vec.sp.df$Dim2) - 0.1, max(vec.sp.df$Dim2 + 0.1))
ggplot() +
xlab("Principal Component 1") + ylab("Principal Component 2") +
geom_hline(yintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_point(data = pcoa.axes, aes(x = Dim1, y = Dim2), size = 4,
col = "olivedrab3") +
geom_segment(data = vec.sp.df, aes(x = 0, xend = Dim1 + 0.01,
y = 0, yend = Dim2 + 0.01),
arrow = arrow(length = unit(0.2, "cm")),
colour = "cornflowerblue") +
geom_polygon(data = pcoa.axes[hull, ], aes(x = Dim1, y = Dim2), alpha = 0.5) +
geom_text(data = vec.sp.df, aes(x = Dim1, y = Dim2, label = trait.names),
size = 4, check_overlap = TRUE) + theme_bw() +
xlim(min(vec.sp.df$Dim1) - 0.1, max(vec.sp.df$Dim1 + 0.1)) +
ylim(min(vec.sp.df$Dim2) - 0.1, max(vec.sp.df$Dim2 + 0.1))
shiny::runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
bird_traits <- read.table("C:/RD/bird_traits.txt",head=T)
bird_traits$body.mass <- as.numeric(bird_traits$body.mass)
comm <- as.matrix(read.csv2("C:/RD/bird_counts.csv"))
# PCOA
traits <- scale(bird_traits[,-1])
rownames(traits) <- make.names(bird_traits[, 1], unique = TRUE)
gow.matrix <- vegdist(traits, method="gower")
#ade4::is.euclid(gow.matrix) # si es F, entonces da eigenvalores negativos
pcoa <- wcmdscale(gow.matrix, add="lingoes", eig=TRUE)
pcoa.axes <- as.data.frame(pcoa$points)
efit <- envfit(pcoa, bird_traits[,-1])
vec.sp.df <- as.data.frame(efit$vectors$arrows*sqrt(efit$vectors$r))
head(vec.sp.df)
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
list(pcoa.eig = pco$eig, pcoa.axes = pcoa.axes, pcoa.vectors = vec.sp.df)
pcoa <- list(pcoa.eig = pcoa$eig, pcoa.axes = pcoa.axes, pcoa.vectors = vec.sp.df)
head(pcoa$pcoa.vectors)
head(pcoa$pcoa.axes)
head(pcoa$pcoa.eig)
pcoa.axes <- pcoa$pcoa.axes
head(pcoa.axes)
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
library(factoextra)
dist.matrix <- vegdist(traits, method = "gower")
cluster <- hclust(dist.matrix, method = "average")
fviz_dend(cluster, cex = 0.5, xlab = "Dissimilarity", ylab = "Species")
fviz_dend(cluster, cex = 0.5, horiz = FALSE, xlab = "Dissimilarity", ylab = "Species")
fviz_dend(cluster, cex = 0.5, horiz = TRUE, xlab = "Dissimilarity", ylab = "Species")
fviz_dend(cluster, cex = 0.5, horiz = TRUE, sub = "",
xlab = "Species", ylab = "Dissimilarity")
fviz_dend(cluster, cex = 0.5, horiz = TRUE, main = "",
xlab = "Species", ylab = "Dissimilarity")
fviz_dend(cluster, cex = 0.5, horiz = TRUE, main = "",
xlab = "Species", ylab = "Dissimilarity",
ggtheme = theme_gray())
fviz_dend(cluster, cex = 0.5, horiz = TRUE, main = "",
xlab = "Species", ylab = "Dissimilarity",
ggtheme = theme_minimal())
fviz_dend(cluster, cex = 0.5, horiz = TRUE, main = "",
k = 4,
xlab = "Species", ylab = "Dissimilarity",
ggtheme = theme_minimal())
fviz_dend(cluster, cex = 0.5, horiz = TRUE, main = "",
k = 4, color_labels_by_k = TRUE,
xlab = "Species", ylab = "Dissimilarity",
ggtheme = theme_minimal())
?fviz_dend
fviz_dend(cluster, cex = 0.5, horiz = TRUE, main = "",
k = 4, color_labels_by_k = TRUE, rect_fill = TRUE,
xlab = "Species", ylab = "Dissimilarity",
ggtheme = theme_minimal())
fviz_dend(cluster, cex = 0.5, horiz = TRUE, main = "",
k = 4, color_labels_by_k = TRUE, rect = TRUE,
xlab = "Species", ylab = "Dissimilarity",
ggtheme = theme_minimal())
fviz_dend(cluster, cex = 0.5, horiz = TRUE, main = "",
k = 4, color_labels_by_k = TRUE, rect = TRUE, rect_fill = TRUE,
xlab = "Species", ylab = "Dissimilarity",
ggtheme = theme_minimal())
fviz_dend(cluster, cex = 1, horiz = TRUE, main = "",
k = 4, color_labels_by_k = TRUE, rect = TRUE, rect_fill = TRUE,
xlab = "Species", ylab = "Dissimilarity",
ggtheme = theme_minimal())
fviz_dend(cluster, cex = 1, horiz = TRUE, main = "",
k = 1, color_labels_by_k = TRUE, rect = TRUE, rect_fill = TRUE,
xlab = "Species", ylab = "Dissimilarity",
ggtheme = theme_minimal())
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
?checkboxGroupInput
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
ggplot() +
xlab("Principal Component 1") + ylab("Principal Component 2") +
geom_hline(yintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_point(data = pcoa.axes, aes(x = Dim1, y = Dim2), size = 4,
col = "olivedrab3") +
geom_segment(data = vec.sp.df, aes(x = 0, xend = Dim1 + 0.01,
y = 0, yend = Dim2 + 0.01),
arrow = arrow(length = unit(0.2, "cm")),
colour = "cornflowerblue") +
geom_polygon(data = pcoa.axes[hull, ], aes(x = Dim1, y = Dim2), alpha = 1) +
geom_text(data = vec.sp.df, aes(x = Dim1, y = Dim2, label = trait.names),
size = 4, check_overlap = TRUE) + theme_bw() +
xlim(min(vec.sp.df$Dim1) - 0.1, max(vec.sp.df$Dim1 + 0.1)) +
ylim(min(vec.sp.df$Dim2) - 0.1, max(vec.sp.df$Dim2 + 0.1))
hull <- chull(pcoa.axes[, 1:2])
ggplot() +
xlab("Principal Component 1") + ylab("Principal Component 2") +
geom_hline(yintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_point(data = pcoa.axes, aes(x = Dim1, y = Dim2), size = 4,
col = "olivedrab3") +
geom_segment(data = vec.sp.df, aes(x = 0, xend = Dim1 + 0.01,
y = 0, yend = Dim2 + 0.01),
arrow = arrow(length = unit(0.2, "cm")),
colour = "cornflowerblue") +
geom_polygon(data = pcoa.axes[hull, ], aes(x = Dim1, y = Dim2), alpha = 1) +
geom_text(data = vec.sp.df, aes(x = Dim1, y = Dim2, label = trait.names),
size = 4, check_overlap = TRUE) + theme_bw() +
xlim(min(vec.sp.df$Dim1) - 0.1, max(vec.sp.df$Dim1 + 0.1)) +
ylim(min(vec.sp.df$Dim2) - 0.1, max(vec.sp.df$Dim2 + 0.1))
trait.names <- colnames(bird_traits[,-1])
ggplot() +
xlab("Principal Component 1") + ylab("Principal Component 2") +
geom_hline(yintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_point(data = pcoa.axes, aes(x = Dim1, y = Dim2), size = 4,
col = "olivedrab3") +
geom_segment(data = vec.sp.df, aes(x = 0, xend = Dim1 + 0.01,
y = 0, yend = Dim2 + 0.01),
arrow = arrow(length = unit(0.2, "cm")),
colour = "cornflowerblue") +
geom_polygon(data = pcoa.axes[hull, ], aes(x = Dim1, y = Dim2), alpha = 1) +
geom_text(data = vec.sp.df, aes(x = Dim1, y = Dim2, label = trait.names),
size = 4, check_overlap = TRUE) + theme_bw() +
xlim(min(vec.sp.df$Dim1) - 0.1, max(vec.sp.df$Dim1 + 0.1)) +
ylim(min(vec.sp.df$Dim2) - 0.1, max(vec.sp.df$Dim2 + 0.1))
ggplot() +
xlab("Principal Component 1") + ylab("Principal Component 2") +
geom_hline(yintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_vline(xintercept = 0, linetype = "dashed", size = 1,
col = "gray") +
geom_point(data = pcoa.axes, aes(x = Dim1, y = Dim2), size = 4,
col = "olivedrab3") +
geom_segment(data = vec.sp.df, aes(x = 0, xend = Dim1 + 0.01,
y = 0, yend = Dim2 + 0.01),
arrow = arrow(length = unit(0.2, "cm")),
colour = "cornflowerblue") +
geom_polygon(data = pcoa.axes[hull, ], aes(x = Dim1, y = Dim2), alpha = 0) +
geom_text(data = vec.sp.df, aes(x = Dim1, y = Dim2, label = trait.names),
size = 4, check_overlap = TRUE) + theme_bw() +
xlim(min(vec.sp.df$Dim1) - 0.1, max(vec.sp.df$Dim1 + 0.1)) +
ylim(min(vec.sp.df$Dim2) - 0.1, max(vec.sp.df$Dim2 + 0.1))
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
library(hexSticker)
?sticker
img <- "sticker_app1.png"
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.1, s_width=.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="FDE725", #ı border color
filename="imgfile.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.1, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDE725", #ı border color
filename="imgfile.png", dpi=300)
plot(s)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.1, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
#h_fill="#482878", # hexagon color,
h_color="#FDE725", #ı border color
filename="imgfile2.png", dpi=300)
plot(s)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
#h_fill="#482878", # hexagon color,
h_color="#FDE725", # border color
filename="imgfile2.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.8, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDE725", # border color
filename="imgfile1.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.8, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDE725", # border color
filename="imgfile1.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.85, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDE725", # border color
filename="imgfile1.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDE725", # border color
filename="imgfile1.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="white", # hexagon color,
h_color="#FDE725", # border color
filename="imgfile0.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile1.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile1.png", dpi=300)
img <- "sticker_app2.png"
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile2.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
img <- "sticker_app4.png"
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile4.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
img <- "sticker_app3.png"
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.9, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=1, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.95, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.9, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.92, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.94, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.96, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.98, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1.2, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.97, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
img <- "sticker_app3.png"
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=1, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
img <- "sticker_app3.png"
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.98, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
img <- "sticker_app3.png"
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.96, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile3.png", dpi=300)
img <- "sticker_app1.png"
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.96, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile1.png", dpi=300)
img <- "sticker_app2.png"
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.96, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile2.png", dpi=300)
img <- "sticker_app4.png"
s <- sticker(subplot=img, package="proFunDiveR", p_size=20,
s_x=0.96, s_y=1.2, s_width=0.92, # position and size subplot
p_x=1, p_y=0.65, p_family="Aller_Rg", # position package name and font
h_fill="#482878", # hexagon color,
h_color="#FDF186", # border color
filename="imgfile4.png", dpi=300)
?switch
shiny::runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
write.csv(data.frame(x1=rnorm(50),x2=rnorm(50)), "fake.csv")
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
df<0
df$X1<0
head(df)
df
df<-data.frame(x1=rnorm(100),x2=rnorm(100))
df<0
length(df<0)>0
length(df$x1<0)>0
df2<-data.frame(x=1:10)
length(df2$x<0)>0
df2$x<0
df[df<0]
length(df[df<0])
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
df2[df2<0]
df2$x[df2$x<0]
length(df2$x[df2$x<0])
length(df$x[df$x<0])
length(df[df<0])
ncol(df)
ncol(df2)
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
colnames(df[colSums(is.na(df)>0)])
length(colnames(df[colSums(is.na(df)>0)]))
df$x1[100]<-NA
length(colnames(df[colSums(is.na(df)>0)]))
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
df>0
df[df<0]
length(df[df<0])
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
a<-df[,1]
a
class(a)
is.numeric(a)
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
?validate
?need
shiny::runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
runApp('C:/Users/54221/Dropbox/GitHub/FD-protocol-shiny-app/R')
